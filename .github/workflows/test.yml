name: 🧪 Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 🔧 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: 🧪 Run tests
      run: |
        python run_tests.py

    - name: 📊 Run detailed unit tests
      run: |
        python tests/test_config.py
        python tests/test_utils.py

    - name: 🔍 Check code formatting (if black is available)
      run: |
        if command -v black &> /dev/null; then
          black --check --diff .
        else
          echo "Black not installed, skipping format check"
        fi
      continue-on-error: true

    - name: 🔎 Lint code (if flake8 is available) 
      run: |
        if command -v flake8 &> /dev/null; then
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        else
          echo "Flake8 not installed, skipping lint check"
        fi
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 🔒 Run safety check
      run: |
        pip install safety
        pip install -r requirements.txt
        safety check --json || true
      continue-on-error: true

    - name: 🛡️ Run bandit security check
      run: |
        pip install bandit
        bandit -r . -f json || true
      continue-on-error: true